Consistency for me is the most important aspect of programming and I believe everyone on a company should come to an agreement about what to follow and, if possible, run automated linting scripts to keep the code tidy. Development of new code is the fastest part of being a developer, understanding code is the slowest, not following consistent rules makes understanding code more difficult and stressful.
Modularity is the second most important coding practice I follow for no one can visualize a full product and all its edge cases from beginning to end in their head. Abstractions helps to organize complex problems into manageable chunks that developers can easily solve.
I would also mention documentation, but I believe unit tests to be more important, for they are a way of documentation that developers are really good at understanding: methodical, specific cause-action sequences in the language programmers are truly excellent at understanding.



To sum up in a word: Adaptability. The innovative and modern (up-to-date) environment principles followed by Aula are what motivates me the most. Developers do not want to be outdated either, I feel like when a software company stops being innovative and replacing its solutions with modern ones they become outdated and adding features or adapting to the market (which changes frequently, like everything in this world) becomes difficult, slow and expensive.


I have developed a few micro services and believe them to be the safest and most maintainable way of writing software that works and can be tested with ease. Micro service architecture also allows modules to be replaced quickly which keeping the system modern at a lot cost.


I breathe semicolons.
I have always been a tinkerer and liked to push the boundaries of what I could create with programming. I started my story with javascript somewhere in 2012, after developing on Lua (as a hobby) which was another high-level language, I quickly grew to love javascript availability (as opposed to Lua, Pascal or C++ in which you had to have a full-development computer in order to see projects written in these languages). I loved to share my experiments with people and network, something about impacting peoples lives with my projects motivated me fiercefully.
Over the years I have developed a lot with javascript both as a hobby and professionally and became proficient with it and the technologies that surround it even thought it's becoming more  difficult as web technologies have been growing at a faster rate.